
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String


Resources:
   
  S3ReadOnlyEC2: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub ${EnvironmentName}-Role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      Path: "/"

  RolePolicies: 
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: AmazonS3ReadOnlyAccess
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Action: 
            -   s3:ListObject
            -   s3:GetObject
            Resource: 
            -   arn:aws:s3:::myprojectbucket907/*
      Roles: 
         - Ref: S3ReadOnlyEC2


  IamS3InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - Ref: S3ReadOnlyEC2

  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol : tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
         

   
       


  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash  
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service     
          wget -p /var/www/html
          https://myprojectbucket907.s3.amazonaws.com/project/index.html        
      ImageId: ami-005de95e8ff495156
    
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t2.micro
      IamInstanceProfile: !Ref IamS3InstanceProfile
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: 10

  WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
          VPCZoneIdentifier:
            - Fn::ImportValue: !Sub "${EnvironmentName}-PRIVN1-SN"
            - Fn::ImportValue: !Sub "${EnvironmentName}-PRIVN2-SN"
            
          LaunchConfigurationName:
            Ref: WebAppLaunchConfig
          MaxSize: '5'
          MinSize: '3'
          TargetGroupARNs:
          - Ref: WebAppTargetGroup

  WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Subnets:
           - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
           - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
          SecurityGroups:
          - Ref: LBSecGroup
  

  Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
          LoadBalancerArn: !Ref WebAppLB
          Port: '80'
          Protocol: HTTP
          DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'

  ALBListenerRule  :
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

  WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckIntervalSeconds: 35
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 8
          HealthyThresholdCount: 2
          Port: 80
          Protocol: HTTP
          UnhealthyThresholdCount: 5
          VpcId: 
           Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"





  